---
# project information
project_name: prowlarr
project_url: "https://github.com/Prowlarr/Prowlarr"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: true
development_versions_items:
  - {tag: "latest", desc: "Prowlarr stable releases"}
  - {tag: "develop", desc: "Prowlarr releases from their develop branch"}
  - {tag: "nightly", desc: "Prowlarr releases from their nightly branch"}
# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/data", desc: "Database and Prowlarr configs"}
param_usage_include_ports: true
param_ports:
  - {external_port: "9696", internal_port: "9696", port_desc: "The port for the Prowlarr web UI"}
readonly_supported: true
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Access the webui at `<your-ip>:9696`, for more information check out [Prowlarr](https://github.com/Prowlarr/Prowlarr).

  Setup info can be found [here](https://wikijs.servarr.com/prowlarr/quick-start-guide).
# init diagram
init_diagram: |
  "prowlarr:nightly": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-prowlarr-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    base -> init-envfile
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-config -> init-prowlarr-config
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-prowlarr
    svc-prowlarr -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.20"
  }
  "prowlarr:nightly" <- Base Images
# changelog
changelogs:
  - {date: "25.05.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "20.03.24:", desc: "Rebase to Alpine 3.19."}
  - {date: "06.06.23:", desc: "Rebase nightly to Alpine 3.18."}
  - {date: "19.12.22:", desc: "Rebase nightly to Alpine 3.17."}
  - {date: "27.10.22:", desc: "Rebase nightly to Alpine 3.16, migrate to s6v3."}
  - {date: "04.02.22:", desc: "Rebase nightly branch to Alpine."}
  - {date: "28.12.21:", desc: "Add nightly-alpine branch."}
  - {date: "06.06.21:", desc: "Initial release."}
